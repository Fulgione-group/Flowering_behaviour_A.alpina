62.50 +   # Gemusekoop
421.43/12+# Car insurance
52.50/12 +# TV
18 +      # netflix disney audible
120/12 +  # Deutsche bahn
40 +      # Kita eating
60/12 +   # Amazon Prime
30 +      # Ballet
35 +      # Internet
600       # Food?!
55+56+59+
44+49+31+
43+108+
21+47+61+63+
0
84 +      # electricity
1280 +    # rent
500/12 +  # Auto insurance
109/12 +  # Household insurance
51/12 +   # haptflicht insurance
127/12 +  # Leben versicherung
80/12 +   # Vienna house hold insurance
750 +     # Loan
223 +     # betriebkosten vienna
35 +      # Telephone
62.50 +   # Gemusekoop
421.43/12+# Car insurance
52.50/12 +# TV
18 +      # netflix disney audible
120/12 +  # Deutsche bahn
40 +      # Kita eating
60/12 +   # Amazon Prime
30 +      # Ballet
35 +      # Internet
600       # Food?!
3*3284
3.5 + 2.0 + 4.9
500/12
85/12
84 +      # electricity
1280 +    # rent
109/12 +  # Household insurance
51/12 +   # haptflicht insurance
127/12 +  # Leben versicherung
85/12 +   # Vienna house hold insurance
750 +     # Loan
223 +     # betriebkosten vienna
35 +      # Telephone
62.50 +   # Gemusekoop
421.43/12+# Car insurance
52.50/12 +# TV
18 +      # netflix disney audible
120/12 +  # Deutsche bahn
40 +      # Kita eating
60/12 +   # Amazon Prime
30 +      # Ballet
35 +      # Internet
600       # Food?!
3600 +    # Io
400 +     # Kids
970 +     # Rent grund
1000      # Eva
5970-3242
3600 +    # Io
400 +     # Kids
970 +     # Rent grund
650      # Eva # 2000 or 1600 depending on tax classes
5620-3242
3600 +    # Io
400 +     # Kids
970 +     # Rent grund
2000
6970-3242
3242*25
3242*25*12
(100/75)*3200*12*100/4 # = 1.600.000
0.75*(1000000*0.04/12)    # = 3333.333   # 2500
0.75*(1300000*0.04/12)    # = 3333.333   # 2500
1167/6500
6500/4
15.75/14.9
(100/75)*4000*12*100/4 # = 1.300.000
pdf("/Users/fulgione/Desktop/towards_fireAndGrund_yearZero_noDollars_jan.pdf", height=5, width=10)
par(mfrow=c(1, 1), mar=c(4,5,2,1))
plot(y=0, x=0, ylim=c(0, 2e5), bg = col, col="black", type="n", lwd=0.3, cex=2, axes=F, ylab=list(expression("K Euro"), cex=1.5), xlab=list(expression("Months"), cex=1.5), xlim=c(0, 12))
tot= 24000 + 5000 # + 54000 # Me invest + eva # 54000 + 20000 + 10000 # Dollars plus me, Eva
totManaged=tot
totIn=tot
totGrund = 60000
monthlyIn=2500
xp=vector()
yp=vector()
xin=vector()
yin=vector()
xp = append(xp, 0)
yp = append(yp, tot + totGrund)
xin = append(xin, 0)
yin = append(yin, totIn)
# Plot month zero, starting point
#
segments(0, 0, 0, 2e5, lwd=0.2)
# points(x=0, y=totIn, col="red")
# points(x=0, y=tot + totGrund, col="blue3")
for (year in 1:1) {
for (month in 1:12) {
segments(month, 0, month, 2e5, lwd=0.2)
#
tot = tot + monthlyIn + (0.07/12)*tot # + 1000/12
# Plus dollars plug in
# tot = tot + 54000/12
# print(paste("before dollars: ", tot, sep=" "))
# if (month == 11 || month == 12) {
# tot = tot + 54000/2
# print("dollar")
# }
# print(paste("after dollars: ", tot, sep=" "))
# totManaged = totManaged + monthlyIn + (0.05/12)*totManaged
totIn = totIn + monthlyIn
# Grund casa:
#
if (totGrund < 200000) {
totGrund = totGrund + (9000-(0.02*(200000-totGrund)))/12
} else {
tot = tot + 9000/12
}
# Bare investments in the market:
#
# points(x=month, y=totIn, col="red")
# points(x=month, y=tot + totGrund, col="blue3")
# points(x=month, y=totManaged + totGrund, col="green")
xp = append(xp, month)
yp = append(yp, tot + totGrund)
xin = append(xin, month)
yin = append(yin, totIn)
print(paste(month, tot, totGrund, (tot + totGrund), sep=" "))
}
# print(paste(year, (tot + totGrund), sep=" "))
}
lines(xp, yp, col="blue3", type="b,c")
lines(xin, yin, col="red", type="b,c")
axis(1, at=seq(0, 12, 1), labels=T, tick=TRUE, las=1, cex.axis=1.2)
axis(2, at=seq(0, 2e5, 25e3), labels=seq(0, 2e2, 25), tick=TRUE, las=1, cex.axis=1.2)
for (i in 0:(200/25)) {
segments(0, 25000*i, 12, 25000*i, lwd=0.2)
}
###
#     Now the actual net worth
###
lines(x=c(0, 1), y=c(60000 + 24000 + 5000, 27500+13500+60000+(6000/12)), col="black", type="b,c")
dev.off()
c(60000 + 24000 + 5000, 27500+13500+60000+(6000/12))
27500+13500
(6000/12)
3600/12/8/5/47
3600/(8*5*47)
3600/(8*5*4)
28975+15850
pdf("/Users/fulgione/Desktop/towards_fireAndGrund_yearZero_noDollars_jan.pdf", height=5, width=10)
par(mfrow=c(1, 1), mar=c(4,5,2,1))
plot(y=0, x=0, ylim=c(0, 2e5), bg = col, col="black", type="n", lwd=0.3, cex=2, axes=F, ylab=list(expression("K Euro"), cex=1.5), xlab=list(expression("Months"), cex=1.5), xlim=c(0, 12))
tot= 24000 + 5000 # + 54000 # Me invest + eva # 54000 + 20000 + 10000 # Dollars plus me, Eva
totManaged=tot
totIn=tot
totGrund = 60000
monthlyIn=2500
xp=vector()
yp=vector()
xin=vector()
yin=vector()
xp = append(xp, 0)
yp = append(yp, tot + totGrund)
xin = append(xin, 0)
yin = append(yin, totIn)
# Plot month zero, starting point
#
segments(0, 0, 0, 2e5, lwd=0.2)
# points(x=0, y=totIn, col="red")
# points(x=0, y=tot + totGrund, col="blue3")
for (year in 1:1) {
for (month in 1:12) {
segments(month, 0, month, 2e5, lwd=0.2)
#
tot = tot + monthlyIn + (0.07/12)*tot # + 1000/12
# Plus dollars plug in
# tot = tot + 54000/12
# print(paste("before dollars: ", tot, sep=" "))
# if (month == 11 || month == 12) {
# tot = tot + 54000/2
# print("dollar")
# }
# print(paste("after dollars: ", tot, sep=" "))
# totManaged = totManaged + monthlyIn + (0.05/12)*totManaged
totIn = totIn + monthlyIn
# Grund casa:
#
if (totGrund < 200000) {
totGrund = totGrund + (9000-(0.02*(200000-totGrund)))/12
} else {
tot = tot + 9000/12
}
# Bare investments in the market:
#
# points(x=month, y=totIn, col="red")
# points(x=month, y=tot + totGrund, col="blue3")
# points(x=month, y=totManaged + totGrund, col="green")
xp = append(xp, month)
yp = append(yp, tot + totGrund)
xin = append(xin, month)
yin = append(yin, totIn)
print(paste(month, tot, totGrund, (tot + totGrund), sep=" "))
}
# print(paste(year, (tot + totGrund), sep=" "))
}
lines(xp, yp, col="blue3", type="b,c")
lines(xin, yin, col="red", type="b,c")
axis(1, at=seq(0, 12, 1), labels=T, tick=TRUE, las=1, cex.axis=1.2)
axis(2, at=seq(0, 2e5, 25e3), labels=seq(0, 2e2, 25), tick=TRUE, las=1, cex.axis=1.2)
for (i in 0:(200/25)) {
segments(0, 25000*i, 12, 25000*i, lwd=0.2)
}
###
#     Now the actual net worth
###
lines(x=c(0, 1), y=c(60000 + 24000 + 5000, 27500+13500+60000+(6000/12)), col="black", type="b,c")
dev.off()
27500+13500+60000+(6000/12)
27500+13500
col
colOr=c(rep(rgb(178/255, 34/255, 34/255, 0.3), 2), rgb(255/255, 0/255, 0/255, 0.3), rgb(255/255, 20/255, 147/255, 0.3))
col=c(rep(rgb(178/255, 34/255, 34/255, 0.9), 2), rgb(255/255, 0/255, 0/255, 0.9), rgb(255/255, 20/255, 147/255, 0.9))
symb=c(21, 24, 23, 22)
###
#       And now the legend
#
pdf("./legend_figFitness.pdf", height=7,width=3)
plot(NULL, xaxt='n', yaxt='n', bty='n', ylab='', xlab='', xlim=0:1, ylim=0:1)
pops=c("Paj", "PEP1", "E3", "E4")
order=1:4
legend("center", legend = pops[order], cex = 1.2, bty="n", pch=symb[order], pt.bg = col[order], ncol=2, y.intersp=1.5)
dev.off()
###
#       And now the legend
#
pdf("./legend_figFitness.pdf", height=7,width=3)
plot(NULL, xaxt='n', yaxt='n', bty='n', ylab='', xlab='', xlim=0:1, ylim=0:1)
pops=c("E3", "E4", "Paj", "PEP1")
order=c(3, 4, 1, 2)
legend("center", legend = pops[order], cex = 1.2, bty="n", pch=symb[order], pt.bg = col[order], ncol=2, y.intersp=1.5)
dev.off()
###
#       And now the legend
#
pdf("./legend_figFitness.pdf", height=7,width=3)
plot(NULL, xaxt='n', yaxt='n', bty='n', ylab='', xlab='', xlim=0:1, ylim=0:1)
pops=c("E3", "E4", "Paj", "PEP1")
order=c(3, 4, 1, 2)
legend("center", legend = pops[order], cex = 1.2, bty="n", pch=symb[order], pt.bg = col[order], ncol=1, y.intersp=1.5)
dev.off()
-0.695521 * -0.695521
805*3/64
7.1e-9*805*3)/64
(7.1e-9*805*3)/64
805*3*4*e-10
805*3*4e-10
2.68+9.66
(150*0.1 + 300*0.02+289*0.05) *7.1e-9
(150*0.1 + 600*0.02+289*0.05) *7.1e-9
(150*0.1 + 300*0.02+289*0.05)
(150*0.1 + 600*0.02+289*0.05)
41.45*4e-10
2.679141e-07+9.66e-07
(150*0.1 + 600*0.02+289*0.05)
(150*0.1 + 600*0.02+289*0.05) *7.1e-9
(150*0.1 + 600*0.02+289*0.05) *4e-10
2.94e-7 + 1.66e-8
1.23e-6 + 3.11e-7
4 *43*1.54e-6
1/0.00026488
4 *43*1.23e-6
1/(4 *43*1.23e-6)
1/(4 *43*3.11e-7)
1/(4*43)
4*500*1.54e-6
4*1000*1.54e-6
1/(4*500)
1/(4*1000)
4.3/3
6107-5000
pdf("/Users/fulgione/Desktop/towards_fireAndGrund_yearZero_noDollars_feb.pdf", height=5, width=10)
par(mfrow=c(1, 1), mar=c(4,5,2,1))
plot(y=0, x=0, ylim=c(0, 2e5), bg = col, col="black", type="n", lwd=0.3, cex=2, axes=F, ylab=list(expression("K Euro"), cex=1.5), xlab=list(expression("Months"), cex=1.5), xlim=c(0, 12))
tot= 24000 + 5000 # + 54000 # Me invest + eva # 54000 + 20000 + 10000 # Dollars plus me, Eva
totManaged=tot
totIn=tot
totGrund = 60000
monthlyIn=2500
xp=vector()
yp=vector()
xin=vector()
yin=vector()
xp = append(xp, 0)
yp = append(yp, tot + totGrund)
xin = append(xin, 0)
yin = append(yin, totIn)
# Plot month zero, starting point
#
segments(0, 0, 0, 2e5, lwd=0.2)
# points(x=0, y=totIn, col="red")
# points(x=0, y=tot + totGrund, col="blue3")
for (year in 1:1) {
for (month in 1:12) {
segments(month, 0, month, 2e5, lwd=0.2)
#
tot = tot + monthlyIn + (0.07/12)*tot # + 1000/12
# Plus dollars plug in
# tot = tot + 54000/12
# print(paste("before dollars: ", tot, sep=" "))
# if (month == 11 || month == 12) {
# tot = tot + 54000/2
# print("dollar")
# }
# print(paste("after dollars: ", tot, sep=" "))
# totManaged = totManaged + monthlyIn + (0.05/12)*totManaged
totIn = totIn + monthlyIn
# Grund casa:
#
if (totGrund < 200000) {
totGrund = totGrund + (9000-(0.02*(200000-totGrund)))/12
} else {
tot = tot + 9000/12
}
# Bare investments in the market:
#
# points(x=month, y=totIn, col="red")
# points(x=month, y=tot + totGrund, col="blue3")
# points(x=month, y=totManaged + totGrund, col="green")
xp = append(xp, month)
yp = append(yp, tot + totGrund)
xin = append(xin, month)
yin = append(yin, totIn)
print(paste(month, tot, totGrund, (tot + totGrund), sep=" "))
}
# print(paste(year, (tot + totGrund), sep=" "))
}
lines(xp, yp, col="blue3", type="b,c")
lines(xin, yin, col="red", type="b,c")
axis(1, at=seq(0, 12, 1), labels=T, tick=TRUE, las=1, cex.axis=1.2)
axis(2, at=seq(0, 2e5, 25e3), labels=seq(0, 2e2, 25), tick=TRUE, las=1, cex.axis=1.2)
for (i in 0:(200/25)) {
segments(0, 25000*i, 12, 25000*i, lwd=0.2)
}
###
#     Now the actual net worth
###
lines(x=c(0, 1), y=c(60000 + 24000 + 5000,            ## End of:
27500+13500+60000+(6000/12)      #     January
), col="black", type="b,c")
dev.off()
14755+27795
####
####
#
#         Year zero
#
####
####
pdf("/Users/fulgione/Desktop/towards_fireAndGrund_yearZero_noDollars_feb.pdf", height=5, width=10)
par(mfrow=c(1, 1), mar=c(4,5,2,1))
plot(y=0, x=0, ylim=c(0, 2e5), bg = col, col="black", type="n", lwd=0.3, cex=2, axes=F, ylab=list(expression("K Euro"), cex=1.5), xlab=list(expression("Months"), cex=1.5), xlim=c(0, 12))
tot= 24000 + 5000 # + 54000 # Me invest + eva # 54000 + 20000 + 10000 # Dollars plus me, Eva
totManaged=tot
totIn=tot
totGrund = 60000
monthlyIn=2500
xp=vector()
yp=vector()
xin=vector()
yin=vector()
xp = append(xp, 0)
yp = append(yp, tot + totGrund)
xin = append(xin, 0)
yin = append(yin, totIn)
# Plot month zero, starting point
#
segments(0, 0, 0, 2e5, lwd=0.2)
# points(x=0, y=totIn, col="red")
# points(x=0, y=tot + totGrund, col="blue3")
for (year in 1:1) {
for (month in 1:12) {
segments(month, 0, month, 2e5, lwd=0.2)
#
tot = tot + monthlyIn + (0.07/12)*tot # + 1000/12
# Plus dollars plug in
# tot = tot + 54000/12
# print(paste("before dollars: ", tot, sep=" "))
# if (month == 11 || month == 12) {
# tot = tot + 54000/2
# print("dollar")
# }
# print(paste("after dollars: ", tot, sep=" "))
# totManaged = totManaged + monthlyIn + (0.05/12)*totManaged
totIn = totIn + monthlyIn
# Grund casa:
#
if (totGrund < 200000) {
totGrund = totGrund + (9000-(0.02*(200000-totGrund)))/12
} else {
tot = tot + 9000/12
}
# Bare investments in the market:
#
# points(x=month, y=totIn, col="red")
# points(x=month, y=tot + totGrund, col="blue3")
# points(x=month, y=totManaged + totGrund, col="green")
xp = append(xp, month)
yp = append(yp, tot + totGrund)
xin = append(xin, month)
yin = append(yin, totIn)
print(paste(month, tot, totGrund, (tot + totGrund), sep=" "))
}
# print(paste(year, (tot + totGrund), sep=" "))
}
lines(xp, yp, col="blue3", type="b,c")
lines(xin, yin, col="red", type="b,c")
axis(1, at=seq(0, 12, 1), labels=T, tick=TRUE, las=1, cex.axis=1.2)
axis(2, at=seq(0, 2e5, 25e3), labels=seq(0, 2e2, 25), tick=TRUE, las=1, cex.axis=1.2)
for (i in 0:(200/25)) {
segments(0, 25000*i, 12, 25000*i, lwd=0.2)
}
###
#     Now the actual net worth
###
lines(x=c(0, 1, 2),
y=c(60000 + 24000 + 5000,            ## End of:
27500+13500+60000+1*(6000/12),     #     January
28895+14755+60000+2*(6000/12)     #     February
), col="black", type="b,c")
dev.off()
28895+14755
14.5/12.7
7.85/7.66
0.2/7.66
7.66/0.2
33/31.4
6*30
0.3*6500
0.3*6500
# Run as:
# Rscript filename.R
###
#         Read big table
###
setwd("/Users/fulgione/git/Flowering_behaviour_A.alpina/")
# setwd("/Users/fulgione/git/Flowering_behaviour_A.alpina/flowering_behavior_greenhouse")
###
gh_noVern_dataSet = "./data/bigpopdata_af.txt"
gh_yesVern_dataSet = "./data/AfterVern_af_withFlowerStop_2.txt"
greenH_noVern <- as.data.frame(read.table(gh_noVern_dataSet, header = T, row.names = NULL))
dat <- subset(greenH_noVern, greenH_noVern$priority == 1, select = c("region","population","family","individual", "FlowAfterGerm_original", "Flowering_binominal"))
# Selection of Natural populations and controls
#
pops=c("E3", "E4", "F1a", "F1b", "F2", "S1", "S2", "S3", "S4", "S5", "Paj", "PEP1")
dat2 <- subset(dat, dat$population %in% pops)
dat2 <- droplevels(dat2)
unique(dat2$population)
# summary(greenH_noVern)
perc=with(dat2, tapply(dat2$Flowering_binominal, dat2$population, mean, na.rm=TRUE))
sd.perc=with(dat2, tapply(dat2$Flowering_binominal, dat2$population, sd, na.rm=TRUE))
count.perc=with(dat2, tapply(dat2$Flowering_binominal, dat2$population, function(x) length(x[!is.na(x)])))
err.perc = (1.96*sd.perc)/(sqrt(count.perc))
flTime=with(dat2, tapply(dat2$FlowAfterGerm_original, dat2$population, mean, na.rm=TRUE))
sd.flTime=with(dat2, tapply(dat2$FlowAfterGerm_original, dat2$population, sd, na.rm=TRUE))
count.flTime=with(dat2, tapply(dat2$FlowAfterGerm_original, dat2$population, function(x) length(x[!is.na(x)])))
err.flow = (1.96*sd.flTime)/(sqrt(count.flTime))
print("Percentrage flowering plants per population:")
print(perc)
print("Average flowering time per population (NA or NaN for not flowering):")
print(flTime)
# Selection of Natural populations and no controls
#
pops=c("E3", "E4", "F1a", "F1b", "F2", "S1", "S2", "S3", "S4", "S5")
dat2 <- subset(dat, dat$population %in% pops)
dat2 <- droplevels(dat2)
unique(dat2$population)
###
#         Isolate data on the reference accessions, PEP1 and pajares
###
dat_ref <- subset(dat, dat$population %in% c("Paj", "PEP1"))
dat_ref <- droplevels(dat_ref)
perc_ref=with(dat_ref, tapply(dat_ref$Flowering_binominal, dat_ref$population, mean, na.rm=TRUE))
err.perc_ref=with(dat_ref, tapply(dat_ref$Flowering_binominal, dat_ref$population, sd, na.rm=TRUE))
flTime_ref=with(dat_ref, tapply(dat_ref$FlowAfterGerm_original, dat_ref$population, mean, na.rm=TRUE))
err.flTime_ref=with(dat_ref, tapply(dat_ref$FlowAfterGerm_original, dat_ref$population, sd, na.rm=TRUE))
count.flTime_ref=with(dat_ref, tapply(dat_ref$FlowAfterGerm_original, dat_ref$population, function(x) length(x[!is.na(x)])))
err.flow_ref = (1.96*err.flTime_ref)/(sqrt(count.flTime_ref))
###
#     Now the values organised by family, not by population
###
percByFamily=with(dat2, tapply(dat2$Flowering_binominal, list(dat2$population, dat2$family), mean, na.rm=TRUE))
flTimeByFamily=with(dat2, tapply(dat2$FlowAfterGerm_original, list(dat2$population, dat2$family), mean, na.rm=TRUE))
flTimeByFamily
flTimeByFamily[1,]
percByFamily
percByFamily[1,]
length(percByFamily[1,])
length(!is.na(percByFamily[1,]))
length(is.na(percByFamily[1,])
)
is.na(percByFamily[1,])
length(percByFamily[1,][!is.na(percByFamily[1,])])
length(percByFamily[2,][!is.na(percByFamily[1,])])
1885 / 6744
